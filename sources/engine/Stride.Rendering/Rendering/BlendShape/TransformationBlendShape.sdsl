
shader TransformationBlendShape : TransformationBase, PositionStream4, Transformation
{

    cbuffer PerDraw
    {
       stage float4x4 BSHAPEDATA[MAX_MORPH_TARGETS*MAX_VERTICES];
 	   stage float BasisKeyWeight;
    }

    
  stage stream uint VertexID : SV_VertexID;

  float4 ApplyBlendshapes(int vID, float4 pos)
  {
    float4x4 mat=BSHAPEDATA[vID];
    float4 blendPos=pos*mat[1][3];
    for(int i=0;i<MAX_MORPH_TARGETS;i++)
    {
        float4 morphedShape=BSHAPEDATA[i* MAX_VERTICES+ vID][0];
        blendPos=+float4(morphedShape[0]+BasisKeyWeight,morphedShape[1], morphedShape[2] , pos[3])*morphedShape[3];
    }
 return blendPos;
  }


  override stage void PreTransformPosition()
    {
        base.PreTransformPosition();
        streams.PositionWS=ApplyBlendshapes(streams.VertexID, streams.PositionWS);
    }
};
