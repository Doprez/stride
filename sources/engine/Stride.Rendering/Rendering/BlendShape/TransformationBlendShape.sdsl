shader TransformationBlendShape : TransformationBase, PositionStream4, Transformation
{

    cbuffer PerDraw
    {   
       //stage float2 morphWeights[MAX_MORPH_TARGETS];
       //stage float3 morphTargetVertices[MAX_MORPH_TARGETS*MAX_VERTICES];
//stage float4x4 BlendMatrixArray[SkinningMaxBones];
       stage float4x4 BSHAPEDATA[12];
    }

    
  stage stream uint VertexID : SV_VertexID;

  float4 ApplyBlendshapes(int vID, float4 pos)
  {
  float4 blendPos=pos;
//=pos* 0f;
 // for(int i=0;i<MAX_MORPH_TARGETS;i++)
  //{
  //float3 morphedShape=morphTargetVertices[0];
 //blendPos=float4(morphedShape[0],morphedShape[1], morphedShape[2] , pos[3]);
 //blendPos=float4(BSHAPEDATA[3],0,-1 , pos[3]);
  //}
  return blendPos;
  }


  override stage void PreTransformPosition()
    {
        base.PreTransformPosition();
        
if(streams.VertexID==1)
{
streams.PositionWS=ApplyBlendshapes(streams.VertexID, streams.PositionWS);
}

        //uint tyh= streams.VertexID;
       // float xnew=streams.PositionWS.x;
       // float ynew=streams.PositionWS.y+1.8+morphWeights[MAX_MORPH_TARGETS-1][1];

        //float znew=streams.PositionWS.z;
        //float4 blendPos = float4(xnew,ynew,znew,streams.PositionWS.w);
        //float4 blendPos=ApplyBlendShape(streams.VertexID, streams.PositionWS);
        //streams.PositionWS = blendPos;
    }
    
  
};
